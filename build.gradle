buildscript {
	ext.kotlin_version = '2.1.0'
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

plugins {
//	id("maven-publish")
	id("net.linguica.maven-settings") // Enables reading settings.xml
}

apply plugin: 'java'
apply plugin: 'kotlin'
//apply plugin: 'maven'
apply plugin: "maven-publish"
//apply plugin: "net.linguica.maven-settings"


tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

repositories {
	maven { url "https://repo1.maven.org/maven2/" }
	maven { url "https://repo.clojars.org/" }
	maven { url "https://repository.hellonico.info/repository/hellonico/" }
	mavenLocal()
    mavenCentral()
}
dependencies {
	implementation group: 'origami', name: 'origami', version:'4.11.0-3'
	implementation group: 'org.clojure', name: 'clojure', version:'1.11.3'
	implementation 'io.github.classgraph:classgraph:4.8.65'
	testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

sourceSets {
//    main {
//        resources {
//            exclude '**'
//        }
//    }
}

publishing {
	publications {
		maven(MavenPublication) {
            groupId "origami"
            artifactId "filters"
            version project.version
            from components.java
        }	
	}

	repositories {

		maven {
			name "vendredi"
			url "https://repository.hellonico.info/repository/hellonico/"
//			credentials {

//				username = serverCredentials?.username
//				password = serverCredentials?.password
//			}
		}
	}
}

kotlin {
    jvmToolchain(23)
}
 compileKotlin {
     kotlinOptions {
         jvmTarget = "17"
     }
 }
 compileTestKotlin {
     kotlinOptions {
         jvmTarget = "17"
     }
 }

task generateDoc(type: JavaExec) {
	main = 'origami.FindFilters$GenerateDoc'
	classpath = sourceSets.main.runtimeClasspath
	args = ["../web-docs/filters","src/test/resources/marcel.png"]
}

task generateEdn(type: JavaExec) {
	main = 'origami.FindFilters$GenerateEdn'
	classpath = sourceSets.main.runtimeClasspath
	args = []
//	args = ["../web-docs/filters","src/test/resources/marcel.png"]
}
